[COMMON]

# target url:
url = https://habr.com/ru/company/hh/blog/570110/

# script for explore page content (selenium):
script = |for _ in range(20):
         |    body = driver.find_element_by_css_selector('body')
         |    body.send_keys(Keys.PAGE_DOWN)
         |    time.sleep(1)
         |#element = WebDriverWait(driver, 30).until(EC.presence_of_element_located((By.PARTIAL_LINK_TEXT, 'Войдите')))
         |#driver.find_element_by_partial_link_text('Войдите').click()
         |while True:
         |    driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
         |    time.sleep(1)
         |    if content != driver.page_source:
         |        content = driver.page_source
         |        continue
         |    else:
         |        break

# update interval (in seconds, 0 -- for ones running):
update_interval = 0

# download mode:
# DOWNLOAD_ONLY
# DOWNLOAD_AND_ANALIZE
# ANALIZE_ONLY
download_mode = self.DownloadMode.DOWNLOAD_AND_ANALIZE

# analize mode:
# FROM_FIRST
# NONE
# FROM_LAST
analize_mode = self.AnalizeMode.FROM_LAST

[ARTICLE]
# article records template (xpath):
link = url
title = self.analize(r, './/h1[@class="tm-article-snippet__title tm-article-snippet__title_h1"]//span//text()', 0, '').strip()
text = ' '.join(self.analize(r, './/div[@class="tm-article-body"]//text()', -1, ''))
date = self.analize(r, './/span[@class="tm-article-snippet__datetime-published"]//text()', 0, '').strip()
author = self.analize(r, './/span[@class="tm-user-info__user"]//text()', 0, '').strip()
score = self.analize(r, './/span[@class="tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_medium"]//text()', 0, 0).strip()
comments = self.analize(r, './/article[@class="tm-comment-thread__comment"]', -1, None)


[COMMENTS]
# comments records template (xpath):
score = self.analize(r, './/span[@class="tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_small"]//text()', 0, '0').strip()
text = ' '.join(self.analize(r, './/p//text()', -1, '')).replace('\n', '').strip()
author = self.analize(r, './/a[@class="tm-user-info__username"]//text()', 0, '').strip()
date = self.analize(r, './/a[@class="tm-comment-thread__comment-link"]//text()', 0, '').strip()
link = url + self.analize(r, './/a[@class="tm-comment-thread__comment-link"]', 0, '', ref = True).strip()
md5 = hashlib.sha256(f'{text}'.encode('utf-8')).hexdigest()